---
# Github Actions build for rclone
# -*- compile-command: "yamllint -f parsable build.yml" -*-

name: build

# Trigger the workflow on push or pull request
on:
  push:
    #tags:
    #  - v*
    branch:
      - '*'


jobs:
  build:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        job_name: ['linux', 'mac', 'windows_amd64' ]

        include:
          - job_name: linux
            os: ubuntu-latest

          - job_name: mac
            os: macOS-latest

            #- job_name: windows_amd64
            #  os: windows-latest

    name: ${{ matrix.job_name }}

    runs-on: ${{ matrix.os }}


    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          path: ./src/github.com/${{ github.repository }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v1
        with:
          version: 5.13.1

      - name: Install Libraries on Linux
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install rclone cmake libgl-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Install Libraries on macOS
        shell: bash
        run: |
          echo '::add-path::/usr/local/opt/qt/bin'
          echo '::set-env name=LDFLAGS::-L/usr/local/opt/qt/lib'
          echo '::set-env name=CPPFLAGS::-I/usr/local/opt/qt/include'
          echo '::set-env name=PKG_CONFIG_PATH::/usr/local/opt/qt/lib/pkgconfig'
          brew update
          brew install rclone
        if: matrix.os == 'macOS-latest'

      - name: Install Libraries on Windows
        shell: powershell
        run: |
          $ProgressPreference = 'SilentlyContinue'
          choco install -y rclone
        if: matrix.os == 'windows-latest'

      - name: Compile
        shell: bash
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build .
        if: matrix.os == 'ubuntu-latest'

      - name: Compile
        shell: bash
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build .
        if: matrix.os == 'macOS-latest'

      - name: Compile on Windows
        shell: powershell
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_CONFIGURATION_TYPES="Release" ..
          cmake --build . --config Release
        if: matrix.os == 'windows-latest'

      - name: Debugging
        shell: bash
        run: |
          pwd
          ls -lah
          echo $Qt5_Dir
          ls -lah build/

      - name: Package for macOS
        shell: bash
        run: |
          cd build
          macdeployqt rclone-browser.app -executable="rclone-browser.app/Contents/MacOS/rclone-browser" -qmldir=../src/
        if: matrix.os == 'macOS-latest'

      - name: Debugging
        shell: bash
        run: |
          pwd
          ls -lah
          ls -lah build/

      - name: Upload artifacts Linux
        uses: actions/upload-artifact@v1
        with:
          name: "rclone-browser-${{ github.ref }}-${{ github.sha  }}-amd64"
          path: build/
        if: matrix.os == 'ubuntu-latest'

      - name: Upload artifacts macOS
        uses: actions/upload-artifact@v1
        with:
          name: "rclone-browser-${{ github.ref }}-${{ github.sha  }}-macOS"
          path: build/
        if: matrix.os == 'macOS-latest'

      - name: Upload artifacts Windows
        uses: actions/upload-artifact@v1
        with:
          name: "rclone-browser-${{ github.ref }}-${{ github.sha }}-win64"
          path: build/build/Release/RcloneBrowser.exe
        if: matrix.os == 'windows-latest'
